// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: codewiki/v1/codewiki.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RepoType int32

const (
	RepoType_Local  RepoType = 0 // 本地
	RepoType_Github RepoType = 1 //github
)

// Enum value maps for RepoType.
var (
	RepoType_name = map[int32]string{
		0: "Local",
		1: "Github",
	}
	RepoType_value = map[string]int32{
		"Local":  0,
		"Github": 1,
	}
)

func (x RepoType) Enum() *RepoType {
	p := new(RepoType)
	*p = x
	return p
}

func (x RepoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepoType) Descriptor() protoreflect.EnumDescriptor {
	return file_codewiki_v1_codewiki_proto_enumTypes[0].Descriptor()
}

func (RepoType) Type() protoreflect.EnumType {
	return &file_codewiki_v1_codewiki_proto_enumTypes[0]
}

func (x RepoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepoType.Descriptor instead.
func (RepoType) EnumDescriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{0}
}

type Language int32

const (
	Language_Golang Language = 0 // Golang
	Language_Java   Language = 1 //Java
	Language_Python Language = 2 //Python
	Language_Rust   Language = 3 //Rust
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "Golang",
		1: "Java",
		2: "Python",
		3: "Rust",
	}
	Language_value = map[string]int32{
		"Golang": 0,
		"Java":   1,
		"Python": 2,
		"Rust":   3,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_codewiki_v1_codewiki_proto_enumTypes[1].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_codewiki_v1_codewiki_proto_enumTypes[1]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{1}
}

type FunScope int32

const (
	FunScope_Default   FunScope = 0
	FunScope_Struct    FunScope = 1
	FunScope_Interface FunScope = 2
	FunScope_Constant  FunScope = 3
	FunScope_Variable  FunScope = 4
)

// Enum value maps for FunScope.
var (
	FunScope_name = map[int32]string{
		0: "Default",
		1: "Struct",
		2: "Interface",
		3: "Constant",
		4: "Variable",
	}
	FunScope_value = map[string]int32{
		"Default":   0,
		"Struct":    1,
		"Interface": 2,
		"Constant":  3,
		"Variable":  4,
	}
)

func (x FunScope) Enum() *FunScope {
	p := new(FunScope)
	*p = x
	return p
}

func (x FunScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FunScope) Descriptor() protoreflect.EnumDescriptor {
	return file_codewiki_v1_codewiki_proto_enumTypes[2].Descriptor()
}

func (FunScope) Type() protoreflect.EnumType {
	return &file_codewiki_v1_codewiki_proto_enumTypes[2]
}

func (x FunScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FunScope.Descriptor instead.
func (FunScope) EnumDescriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{2}
}

type AnalyzeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepoType      RepoType               `protobuf:"varint,1,opt,name=repoType,proto3,enum=codewiki.v1.RepoType" json:"repoType,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Target        string                 `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Language      string                 `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	Includes      []string               `protobuf:"bytes,6,rep,name=includes,proto3" json:"includes,omitempty"`
	Excludes      []string               `protobuf:"bytes,7,rep,name=excludes,proto3" json:"excludes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeReq) Reset() {
	*x = AnalyzeReq{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeReq) ProtoMessage() {}

func (x *AnalyzeReq) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeReq.ProtoReflect.Descriptor instead.
func (*AnalyzeReq) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{0}
}

func (x *AnalyzeReq) GetRepoType() RepoType {
	if x != nil {
		return x.RepoType
	}
	return RepoType_Local
}

func (x *AnalyzeReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AnalyzeReq) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *AnalyzeReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AnalyzeReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AnalyzeReq) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

func (x *AnalyzeReq) GetExcludes() []string {
	if x != nil {
		return x.Excludes
	}
	return nil
}

type AnalyzeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *BaseResp              `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeResp) Reset() {
	*x = AnalyzeResp{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResp) ProtoMessage() {}

func (x *AnalyzeResp) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResp.ProtoReflect.Descriptor instead.
func (*AnalyzeResp) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{1}
}

func (x *AnalyzeResp) GetRet() *BaseResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

type CallChainReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallChainReq) Reset() {
	*x = CallChainReq{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallChainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallChainReq) ProtoMessage() {}

func (x *CallChainReq) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallChainReq.ProtoReflect.Descriptor instead.
func (*CallChainReq) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{2}
}

func (x *CallChainReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CallChainResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *BaseResp              `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *CallChainResp_Result  `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallChainResp) Reset() {
	*x = CallChainResp{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallChainResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallChainResp) ProtoMessage() {}

func (x *CallChainResp) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallChainResp.ProtoReflect.Descriptor instead.
func (*CallChainResp) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{3}
}

func (x *CallChainResp) GetRet() *BaseResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *CallChainResp) GetBody() *CallChainResp_Result {
	if x != nil {
		return x.Body
	}
	return nil
}

type CallRelationship struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CallerId       string                 `protobuf:"bytes,1,opt,name=callerId,proto3" json:"callerId,omitempty"`
	CallerName     string                 `protobuf:"bytes,2,opt,name=callerName,proto3" json:"callerName,omitempty"`
	CalleeId       string                 `protobuf:"bytes,3,opt,name=calleeId,proto3" json:"calleeId,omitempty"`
	CalleeName     string                 `protobuf:"bytes,4,opt,name=calleeName,proto3" json:"calleeName,omitempty"`
	CalleeFileId   string                 `protobuf:"bytes,5,opt,name=calleeFileId,proto3" json:"calleeFileId,omitempty"`
	CallerFileId   string                 `protobuf:"bytes,6,opt,name=callerFileId,proto3" json:"callerFileId,omitempty"`
	CalleeScope    int64                  `protobuf:"varint,7,opt,name=calleeScope,proto3" json:"calleeScope,omitempty"`
	CallerScope    int64                  `protobuf:"varint,8,opt,name=callerScope,proto3" json:"callerScope,omitempty"`
	CalleeEntityId string                 `protobuf:"bytes,9,opt,name=calleeEntityId,proto3" json:"calleeEntityId,omitempty"`
	CallerEntityId string                 `protobuf:"bytes,10,opt,name=callerEntityId,proto3" json:"callerEntityId,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CallRelationship) Reset() {
	*x = CallRelationship{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallRelationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallRelationship) ProtoMessage() {}

func (x *CallRelationship) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallRelationship.ProtoReflect.Descriptor instead.
func (*CallRelationship) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{4}
}

func (x *CallRelationship) GetCallerId() string {
	if x != nil {
		return x.CallerId
	}
	return ""
}

func (x *CallRelationship) GetCallerName() string {
	if x != nil {
		return x.CallerName
	}
	return ""
}

func (x *CallRelationship) GetCalleeId() string {
	if x != nil {
		return x.CalleeId
	}
	return ""
}

func (x *CallRelationship) GetCalleeName() string {
	if x != nil {
		return x.CalleeName
	}
	return ""
}

func (x *CallRelationship) GetCalleeFileId() string {
	if x != nil {
		return x.CalleeFileId
	}
	return ""
}

func (x *CallRelationship) GetCallerFileId() string {
	if x != nil {
		return x.CallerFileId
	}
	return ""
}

func (x *CallRelationship) GetCalleeScope() int64 {
	if x != nil {
		return x.CalleeScope
	}
	return 0
}

func (x *CallRelationship) GetCallerScope() int64 {
	if x != nil {
		return x.CallerScope
	}
	return 0
}

func (x *CallRelationship) GetCalleeEntityId() string {
	if x != nil {
		return x.CalleeEntityId
	}
	return ""
}

func (x *CallRelationship) GetCallerEntityId() string {
	if x != nil {
		return x.CallerEntityId
	}
	return ""
}

// ===== Repo Management =====
type Repo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RepoType      RepoType               `protobuf:"varint,3,opt,name=repoType,proto3,enum=codewiki.v1.RepoType" json:"repoType,omitempty"`
	Path          string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"` // 本地路径，可选
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Excludes      string                 `protobuf:"bytes,6,opt,name=excludes,proto3" json:"excludes,omitempty"` //不需要分析的目录
	Language      Language               `protobuf:"varint,7,opt,name=language,proto3,enum=codewiki.v1.Language" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Repo) Reset() {
	*x = Repo{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Repo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repo) ProtoMessage() {}

func (x *Repo) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repo.ProtoReflect.Descriptor instead.
func (*Repo) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{5}
}

func (x *Repo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Repo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Repo) GetRepoType() RepoType {
	if x != nil {
		return x.RepoType
	}
	return RepoType_Local
}

func (x *Repo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Repo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Repo) GetExcludes() string {
	if x != nil {
		return x.Excludes
	}
	return ""
}

func (x *Repo) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_Golang
}

type CreateRepoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RepoType      RepoType               `protobuf:"varint,2,opt,name=repoType,proto3,enum=codewiki.v1.RepoType" json:"repoType,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Excludes      string                 `protobuf:"bytes,6,opt,name=excludes,proto3" json:"excludes,omitempty"` //不需要分析的目录
	Language      Language               `protobuf:"varint,7,opt,name=language,proto3,enum=codewiki.v1.Language" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRepoReq) Reset() {
	*x = CreateRepoReq{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepoReq) ProtoMessage() {}

func (x *CreateRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepoReq.ProtoReflect.Descriptor instead.
func (*CreateRepoReq) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRepoReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRepoReq) GetRepoType() RepoType {
	if x != nil {
		return x.RepoType
	}
	return RepoType_Local
}

func (x *CreateRepoReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateRepoReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreateRepoReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRepoReq) GetExcludes() string {
	if x != nil {
		return x.Excludes
	}
	return ""
}

func (x *CreateRepoReq) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_Golang
}

type CreateRepoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *BaseResp              `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *CreateRepoResp_Result `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRepoResp) Reset() {
	*x = CreateRepoResp{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepoResp) ProtoMessage() {}

func (x *CreateRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepoResp.ProtoReflect.Descriptor instead.
func (*CreateRepoResp) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRepoResp) GetRet() *BaseResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *CreateRepoResp) GetBody() *CreateRepoResp_Result {
	if x != nil {
		return x.Body
	}
	return nil
}

type ListRepoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepoReq) Reset() {
	*x = ListRepoReq{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepoReq) ProtoMessage() {}

func (x *ListRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepoReq.ProtoReflect.Descriptor instead.
func (*ListRepoReq) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{8}
}

type ListRepoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *BaseResp              `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *ListRepoResp_Result   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepoResp) Reset() {
	*x = ListRepoResp{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepoResp) ProtoMessage() {}

func (x *ListRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepoResp.ProtoReflect.Descriptor instead.
func (*ListRepoResp) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{9}
}

func (x *ListRepoResp) GetRet() *BaseResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *ListRepoResp) GetBody() *ListRepoResp_Result {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetRepoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepoReq) Reset() {
	*x = GetRepoReq{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepoReq) ProtoMessage() {}

func (x *GetRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepoReq.ProtoReflect.Descriptor instead.
func (*GetRepoReq) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{10}
}

func (x *GetRepoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRepoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *BaseResp              `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *GetRepoResp_Result    `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepoResp) Reset() {
	*x = GetRepoResp{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepoResp) ProtoMessage() {}

func (x *GetRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepoResp.ProtoReflect.Descriptor instead.
func (*GetRepoResp) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{11}
}

func (x *GetRepoResp) GetRet() *BaseResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *GetRepoResp) GetBody() *GetRepoResp_Result {
	if x != nil {
		return x.Body
	}
	return nil
}

type DeleteRepoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRepoReq) Reset() {
	*x = DeleteRepoReq{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepoReq) ProtoMessage() {}

func (x *DeleteRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepoReq.ProtoReflect.Descriptor instead.
func (*DeleteRepoReq) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteRepoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRepoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *BaseResp              `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRepoResp) Reset() {
	*x = DeleteRepoResp{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepoResp) ProtoMessage() {}

func (x *DeleteRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepoResp.ProtoReflect.Descriptor instead.
func (*DeleteRepoResp) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteRepoResp) GetRet() *BaseResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

type AnalyzeRepoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ForceUpdate   bool                   `protobuf:"varint,2,opt,name=forceUpdate,proto3" json:"forceUpdate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeRepoReq) Reset() {
	*x = AnalyzeRepoReq{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeRepoReq) ProtoMessage() {}

func (x *AnalyzeRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeRepoReq.ProtoReflect.Descriptor instead.
func (*AnalyzeRepoReq) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{14}
}

func (x *AnalyzeRepoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AnalyzeRepoReq) GetForceUpdate() bool {
	if x != nil {
		return x.ForceUpdate
	}
	return false
}

type GetRepoTreeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepoTreeReq) Reset() {
	*x = GetRepoTreeReq{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepoTreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepoTreeReq) ProtoMessage() {}

func (x *GetRepoTreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepoTreeReq.ProtoReflect.Descriptor instead.
func (*GetRepoTreeReq) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{15}
}

func (x *GetRepoTreeReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRepoTreeResp struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Ret           *BaseResp               `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *GetRepoTreeResp_Result `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepoTreeResp) Reset() {
	*x = GetRepoTreeResp{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepoTreeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepoTreeResp) ProtoMessage() {}

func (x *GetRepoTreeResp) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepoTreeResp.ProtoReflect.Descriptor instead.
func (*GetRepoTreeResp) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{16}
}

func (x *GetRepoTreeResp) GetRet() *BaseResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *GetRepoTreeResp) GetBody() *GetRepoTreeResp_Result {
	if x != nil {
		return x.Body
	}
	return nil
}

type PackageNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentId      string                 `protobuf:"bytes,3,opt,name=parentId,proto3" json:"parentId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackageNode) Reset() {
	*x = PackageNode{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageNode) ProtoMessage() {}

func (x *PackageNode) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageNode.ProtoReflect.Descriptor instead.
func (*PackageNode) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{17}
}

func (x *PackageNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PackageNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PackageNode) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

type FileNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PkgId         string                 `protobuf:"bytes,3,opt,name=pkgId,proto3" json:"pkgId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileNode) Reset() {
	*x = FileNode{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileNode) ProtoMessage() {}

func (x *FileNode) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileNode.ProtoReflect.Descriptor instead.
func (*FileNode) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{18}
}

func (x *FileNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileNode) GetPkgId() string {
	if x != nil {
		return x.PkgId
	}
	return ""
}

type ViewFileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepoId        string                 `protobuf:"bytes,2,opt,name=repoId,proto3" json:"repoId,omitempty"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewFileReq) Reset() {
	*x = ViewFileReq{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewFileReq) ProtoMessage() {}

func (x *ViewFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewFileReq.ProtoReflect.Descriptor instead.
func (*ViewFileReq) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{19}
}

func (x *ViewFileReq) GetRepoId() string {
	if x != nil {
		return x.RepoId
	}
	return ""
}

func (x *ViewFileReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ViewFileResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           *BaseResp              `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *ViewFileResp_Result   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewFileResp) Reset() {
	*x = ViewFileResp{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewFileResp) ProtoMessage() {}

func (x *ViewFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewFileResp.ProtoReflect.Descriptor instead.
func (*ViewFileResp) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{20}
}

func (x *ViewFileResp) GetRet() *BaseResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *ViewFileResp) GetBody() *ViewFileResp_Result {
	if x != nil {
		return x.Body
	}
	return nil
}

type Function struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FileId        string                 `protobuf:"bytes,2,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Receiver      string                 `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Function) Reset() {
	*x = Function{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Function) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function) ProtoMessage() {}

func (x *Function) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function.ProtoReflect.Descriptor instead.
func (*Function) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{21}
}

func (x *Function) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Function) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *Function) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Function) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type Entity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FileId        string                 `protobuf:"bytes,2,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Functions     []*Function            `protobuf:"bytes,4,rep,name=functions,proto3" json:"functions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entity) Reset() {
	*x = Entity{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{22}
}

func (x *Entity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Entity) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *Entity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Entity) GetFunctions() []*Function {
	if x != nil {
		return x.Functions
	}
	return nil
}

type GetImplementReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImplementReq) Reset() {
	*x = GetImplementReq{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImplementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImplementReq) ProtoMessage() {}

func (x *GetImplementReq) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImplementReq.ProtoReflect.Descriptor instead.
func (*GetImplementReq) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{23}
}

func (x *GetImplementReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetImplementResp struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Ret           *BaseResp                `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Body          *GetImplementResp_Result `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImplementResp) Reset() {
	*x = GetImplementResp{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImplementResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImplementResp) ProtoMessage() {}

func (x *GetImplementResp) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImplementResp.ProtoReflect.Descriptor instead.
func (*GetImplementResp) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{24}
}

func (x *GetImplementResp) GetRet() *BaseResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *GetImplementResp) GetBody() *GetImplementResp_Result {
	if x != nil {
		return x.Body
	}
	return nil
}

type AnswerReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Question      string                 `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerReq) Reset() {
	*x = AnswerReq{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerReq) ProtoMessage() {}

func (x *AnswerReq) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerReq.ProtoReflect.Descriptor instead.
func (*AnswerReq) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{25}
}

func (x *AnswerReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AnswerReq) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type AnswerResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Answer        string                 `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	IsStreaming   bool                   `protobuf:"varint,2,opt,name=is_streaming,json=isStreaming,proto3" json:"is_streaming,omitempty"` // 是否为流式响应
	IsComplete    bool                   `protobuf:"varint,3,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`    // 是否完成
	Chunk         string                 `protobuf:"bytes,4,opt,name=chunk,proto3" json:"chunk,omitempty"`                                 // 流式数据块
	ChunkIndex    int32                  `protobuf:"varint,5,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`    // 数据块索引
	Error         string                 `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`                                 // 错误信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerResp) Reset() {
	*x = AnswerResp{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerResp) ProtoMessage() {}

func (x *AnswerResp) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerResp.ProtoReflect.Descriptor instead.
func (*AnswerResp) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{26}
}

func (x *AnswerResp) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *AnswerResp) GetIsStreaming() bool {
	if x != nil {
		return x.IsStreaming
	}
	return false
}

func (x *AnswerResp) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

func (x *AnswerResp) GetChunk() string {
	if x != nil {
		return x.Chunk
	}
	return ""
}

func (x *AnswerResp) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *AnswerResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CallChainResp_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CallRelations []*CallRelationship    `protobuf:"bytes,3,rep,name=callRelations,proto3" json:"callRelations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallChainResp_Result) Reset() {
	*x = CallChainResp_Result{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallChainResp_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallChainResp_Result) ProtoMessage() {}

func (x *CallChainResp_Result) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallChainResp_Result.ProtoReflect.Descriptor instead.
func (*CallChainResp_Result) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CallChainResp_Result) GetCallRelations() []*CallRelationship {
	if x != nil {
		return x.CallRelations
	}
	return nil
}

type CreateRepoResp_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRepoResp_Result) Reset() {
	*x = CreateRepoResp_Result{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRepoResp_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepoResp_Result) ProtoMessage() {}

func (x *CreateRepoResp_Result) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepoResp_Result.ProtoReflect.Descriptor instead.
func (*CreateRepoResp_Result) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CreateRepoResp_Result) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListRepoResp_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repo          []*Repo                `protobuf:"bytes,1,rep,name=repo,proto3" json:"repo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepoResp_Result) Reset() {
	*x = ListRepoResp_Result{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepoResp_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepoResp_Result) ProtoMessage() {}

func (x *ListRepoResp_Result) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepoResp_Result.ProtoReflect.Descriptor instead.
func (*ListRepoResp_Result) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListRepoResp_Result) GetRepo() []*Repo {
	if x != nil {
		return x.Repo
	}
	return nil
}

type GetRepoResp_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repo          *Repo                  `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepoResp_Result) Reset() {
	*x = GetRepoResp_Result{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepoResp_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepoResp_Result) ProtoMessage() {}

func (x *GetRepoResp_Result) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepoResp_Result.ProtoReflect.Descriptor instead.
func (*GetRepoResp_Result) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetRepoResp_Result) GetRepo() *Repo {
	if x != nil {
		return x.Repo
	}
	return nil
}

type GetRepoTreeResp_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Packages      []*PackageNode         `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty"`
	Files         []*FileNode            `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepoTreeResp_Result) Reset() {
	*x = GetRepoTreeResp_Result{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepoTreeResp_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepoTreeResp_Result) ProtoMessage() {}

func (x *GetRepoTreeResp_Result) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepoTreeResp_Result.ProtoReflect.Descriptor instead.
func (*GetRepoTreeResp_Result) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GetRepoTreeResp_Result) GetPackages() []*PackageNode {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *GetRepoTreeResp_Result) GetFiles() []*FileNode {
	if x != nil {
		return x.Files
	}
	return nil
}

type ViewFileResp_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	Language      Language               `protobuf:"varint,2,opt,name=language,proto3,enum=codewiki.v1.Language" json:"language,omitempty"`
	Functions     []*Function            `protobuf:"bytes,3,rep,name=functions,proto3" json:"functions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewFileResp_Result) Reset() {
	*x = ViewFileResp_Result{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewFileResp_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewFileResp_Result) ProtoMessage() {}

func (x *ViewFileResp_Result) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewFileResp_Result.ProtoReflect.Descriptor instead.
func (*ViewFileResp_Result) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{20, 0}
}

func (x *ViewFileResp_Result) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ViewFileResp_Result) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_Golang
}

func (x *ViewFileResp_Result) GetFunctions() []*Function {
	if x != nil {
		return x.Functions
	}
	return nil
}

type GetImplementResp_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entities      []*Entity              `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImplementResp_Result) Reset() {
	*x = GetImplementResp_Result{}
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImplementResp_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImplementResp_Result) ProtoMessage() {}

func (x *GetImplementResp_Result) ProtoReflect() protoreflect.Message {
	mi := &file_codewiki_v1_codewiki_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImplementResp_Result.ProtoReflect.Descriptor instead.
func (*GetImplementResp_Result) Descriptor() ([]byte, []int) {
	return file_codewiki_v1_codewiki_proto_rawDescGZIP(), []int{24, 0}
}

func (x *GetImplementResp_Result) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

var File_codewiki_v1_codewiki_proto protoreflect.FileDescriptor

const file_codewiki_v1_codewiki_proto_rawDesc = "" +
	"\n" +
	"\x1acodewiki/v1/codewiki.proto\x12\vcodewiki.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1copenapi/v3/annotations.proto\x1a\x17validate/validate.proto\x1a\x18codewiki/v1/common.proto\"\xe1\x01\n" +
	"\n" +
	"AnalyzeReq\x121\n" +
	"\brepoType\x18\x01 \x01(\x0e2\x15.codewiki.v1.RepoTypeR\brepoType\x12\x1e\n" +
	"\x04path\x18\x02 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\b\x18\x80\x02R\x04path\x12\x16\n" +
	"\x06target\x18\x03 \x01(\tR\x06target\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12\x1a\n" +
	"\blanguage\x18\x05 \x01(\tR\blanguage\x12\x1a\n" +
	"\bincludes\x18\x06 \x03(\tR\bincludes\x12\x1a\n" +
	"\bexcludes\x18\a \x03(\tR\bexcludes\"6\n" +
	"\vAnalyzeResp\x12'\n" +
	"\x03ret\x18\x01 \x01(\v2\x15.codewiki.v1.BaseRespR\x03ret\"\x1e\n" +
	"\fCallChainReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xbe\x01\n" +
	"\rCallChainResp\x12'\n" +
	"\x03ret\x18\x01 \x01(\v2\x15.codewiki.v1.BaseRespR\x03ret\x125\n" +
	"\x04body\x18\x02 \x01(\v2!.codewiki.v1.CallChainResp.ResultR\x04body\x1aM\n" +
	"\x06Result\x12C\n" +
	"\rcallRelations\x18\x03 \x03(\v2\x1d.codewiki.v1.CallRelationshipR\rcallRelations\"\xe6\x02\n" +
	"\x10CallRelationship\x12\x1a\n" +
	"\bcallerId\x18\x01 \x01(\tR\bcallerId\x12\x1e\n" +
	"\n" +
	"callerName\x18\x02 \x01(\tR\n" +
	"callerName\x12\x1a\n" +
	"\bcalleeId\x18\x03 \x01(\tR\bcalleeId\x12\x1e\n" +
	"\n" +
	"calleeName\x18\x04 \x01(\tR\n" +
	"calleeName\x12\"\n" +
	"\fcalleeFileId\x18\x05 \x01(\tR\fcalleeFileId\x12\"\n" +
	"\fcallerFileId\x18\x06 \x01(\tR\fcallerFileId\x12 \n" +
	"\vcalleeScope\x18\a \x01(\x03R\vcalleeScope\x12 \n" +
	"\vcallerScope\x18\b \x01(\x03R\vcallerScope\x12&\n" +
	"\x0ecalleeEntityId\x18\t \x01(\tR\x0ecalleeEntityId\x12&\n" +
	"\x0ecallerEntityId\x18\n" +
	" \x01(\tR\x0ecallerEntityId\"\xe2\x01\n" +
	"\x04Repo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x121\n" +
	"\brepoType\x18\x03 \x01(\x0e2\x15.codewiki.v1.RepoTypeR\brepoType\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1a\n" +
	"\bexcludes\x18\x06 \x01(\tR\bexcludes\x121\n" +
	"\blanguage\x18\a \x01(\x0e2\x15.codewiki.v1.LanguageR\blanguage\"\xfd\x01\n" +
	"\rCreateRepoReq\x12\x1e\n" +
	"\x04name\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x01R\x04name\x121\n" +
	"\brepoType\x18\x02 \x01(\x0e2\x15.codewiki.v1.RepoTypeR\brepoType\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1a\n" +
	"\bexcludes\x18\x06 \x01(\tR\bexcludes\x121\n" +
	"\blanguage\x18\a \x01(\x0e2\x15.codewiki.v1.LanguageR\blanguage\"\x8b\x01\n" +
	"\x0eCreateRepoResp\x12'\n" +
	"\x03ret\x18\x01 \x01(\v2\x15.codewiki.v1.BaseRespR\x03ret\x126\n" +
	"\x04body\x18\x02 \x01(\v2\".codewiki.v1.CreateRepoResp.ResultR\x04body\x1a\x18\n" +
	"\x06Result\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\r\n" +
	"\vListRepoReq\"\x9e\x01\n" +
	"\fListRepoResp\x12'\n" +
	"\x03ret\x18\x01 \x01(\v2\x15.codewiki.v1.BaseRespR\x03ret\x124\n" +
	"\x04body\x18\x02 \x01(\v2 .codewiki.v1.ListRepoResp.ResultR\x04body\x1a/\n" +
	"\x06Result\x12%\n" +
	"\x04repo\x18\x01 \x03(\v2\x11.codewiki.v1.RepoR\x04repo\"\x1c\n" +
	"\n" +
	"GetRepoReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x9c\x01\n" +
	"\vGetRepoResp\x12'\n" +
	"\x03ret\x18\x01 \x01(\v2\x15.codewiki.v1.BaseRespR\x03ret\x123\n" +
	"\x04body\x18\x02 \x01(\v2\x1f.codewiki.v1.GetRepoResp.ResultR\x04body\x1a/\n" +
	"\x06Result\x12%\n" +
	"\x04repo\x18\x01 \x01(\v2\x11.codewiki.v1.RepoR\x04repo\"\x1f\n" +
	"\rDeleteRepoReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"9\n" +
	"\x0eDeleteRepoResp\x12'\n" +
	"\x03ret\x18\x01 \x01(\v2\x15.codewiki.v1.BaseRespR\x03ret\"B\n" +
	"\x0eAnalyzeRepoReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vforceUpdate\x18\x02 \x01(\bR\vforceUpdate\" \n" +
	"\x0eGetRepoTreeReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xe0\x01\n" +
	"\x0fGetRepoTreeResp\x12'\n" +
	"\x03ret\x18\x01 \x01(\v2\x15.codewiki.v1.BaseRespR\x03ret\x127\n" +
	"\x04body\x18\x02 \x01(\v2#.codewiki.v1.GetRepoTreeResp.ResultR\x04body\x1ak\n" +
	"\x06Result\x124\n" +
	"\bpackages\x18\x01 \x03(\v2\x18.codewiki.v1.PackageNodeR\bpackages\x12+\n" +
	"\x05files\x18\x02 \x03(\v2\x15.codewiki.v1.FileNodeR\x05files\"M\n" +
	"\vPackageNode\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bparentId\x18\x03 \x01(\tR\bparentId\"D\n" +
	"\bFileNode\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05pkgId\x18\x03 \x01(\tR\x05pkgId\"5\n" +
	"\vViewFileReq\x12\x16\n" +
	"\x06repoId\x18\x02 \x01(\tR\x06repoId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xfa\x01\n" +
	"\fViewFileResp\x12'\n" +
	"\x03ret\x18\x01 \x01(\v2\x15.codewiki.v1.BaseRespR\x03ret\x124\n" +
	"\x04body\x18\x02 \x01(\v2 .codewiki.v1.ViewFileResp.ResultR\x04body\x1a\x8a\x01\n" +
	"\x06Result\x12\x18\n" +
	"\aContent\x18\x01 \x01(\tR\aContent\x121\n" +
	"\blanguage\x18\x02 \x01(\x0e2\x15.codewiki.v1.LanguageR\blanguage\x123\n" +
	"\tfunctions\x18\x03 \x03(\v2\x15.codewiki.v1.FunctionR\tfunctions\"b\n" +
	"\bFunction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06fileId\x18\x02 \x01(\tR\x06fileId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1a\n" +
	"\breceiver\x18\x04 \x01(\tR\breceiver\"y\n" +
	"\x06Entity\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06fileId\x18\x02 \x01(\tR\x06fileId\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x123\n" +
	"\tfunctions\x18\x04 \x03(\v2\x15.codewiki.v1.FunctionR\tfunctions\"!\n" +
	"\x0fGetImplementReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xb0\x01\n" +
	"\x10GetImplementResp\x12'\n" +
	"\x03ret\x18\x01 \x01(\v2\x15.codewiki.v1.BaseRespR\x03ret\x128\n" +
	"\x04body\x18\x02 \x01(\v2$.codewiki.v1.GetImplementResp.ResultR\x04body\x1a9\n" +
	"\x06Result\x12/\n" +
	"\bentities\x18\x01 \x03(\v2\x13.codewiki.v1.EntityR\bentities\"7\n" +
	"\tAnswerReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bquestion\x18\x02 \x01(\tR\bquestion\"\xb5\x01\n" +
	"\n" +
	"AnswerResp\x12\x16\n" +
	"\x06answer\x18\x01 \x01(\tR\x06answer\x12!\n" +
	"\fis_streaming\x18\x02 \x01(\bR\visStreaming\x12\x1f\n" +
	"\vis_complete\x18\x03 \x01(\bR\n" +
	"isComplete\x12\x14\n" +
	"\x05chunk\x18\x04 \x01(\tR\x05chunk\x12\x1f\n" +
	"\vchunk_index\x18\x05 \x01(\x05R\n" +
	"chunkIndex\x12\x14\n" +
	"\x05error\x18\x06 \x01(\tR\x05error*!\n" +
	"\bRepoType\x12\t\n" +
	"\x05Local\x10\x00\x12\n" +
	"\n" +
	"\x06Github\x10\x01*6\n" +
	"\bLanguage\x12\n" +
	"\n" +
	"\x06Golang\x10\x00\x12\b\n" +
	"\x04Java\x10\x01\x12\n" +
	"\n" +
	"\x06Python\x10\x02\x12\b\n" +
	"\x04Rust\x10\x03*N\n" +
	"\bFunScope\x12\v\n" +
	"\aDefault\x10\x00\x12\n" +
	"\n" +
	"\x06Struct\x10\x01\x12\r\n" +
	"\tInterface\x10\x02\x12\f\n" +
	"\bConstant\x10\x03\x12\f\n" +
	"\bVariable\x10\x042\xc9\x04\n" +
	"\vRepoService\x12o\n" +
	"\n" +
	"CreateRepo\x12\x1a.codewiki.v1.CreateRepoReq\x1a\x1b.codewiki.v1.CreateRepoResp\"(\xbaG\x0e\x12\f创建仓库\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/v1/api/repo\x12h\n" +
	"\tListRepos\x12\x18.codewiki.v1.ListRepoReq\x1a\x19.codewiki.v1.ListRepoResp\"&\xbaG\x0e\x12\f仓库列表\x82\xd3\xe4\x93\x02\x0f\x12\r/v1/api/repos\x12h\n" +
	"\aGetRepo\x12\x17.codewiki.v1.GetRepoReq\x1a\x18.codewiki.v1.GetRepoResp\"*\xbaG\x0e\x12\f仓库详情\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/api/repo/{id}\x12q\n" +
	"\n" +
	"DeleteRepo\x12\x1a.codewiki.v1.DeleteRepoReq\x1a\x1b.codewiki.v1.DeleteRepoResp\"*\xbaG\x0e\x12\f删除仓库\x82\xd3\xe4\x93\x02\x13*\x11/v1/api/repo/{id}\x12\x81\x01\n" +
	"\vGetRepoTree\x12\x1b.codewiki.v1.GetRepoTreeReq\x1a\x1c.codewiki.v1.GetRepoTreeResp\"7\xbaG\x15\x12\x13仓库包/文件树\x82\xd3\xe4\x93\x02\x19\x12\x17/v1/api/repos/{id}/tree2\xb6\x04\n" +
	"\x13CodeAnalyzerService\x12y\n" +
	"\tCallChain\x12\x19.codewiki.v1.CallChainReq\x1a\x1a.codewiki.v1.CallChainResp\"5\xbaG\x0e\x12\f分析代码\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v1/api/functions/{id}/calls\x12\x85\x01\n" +
	"\vAnalyzeRepo\x12\x1b.codewiki.v1.AnalyzeRepoReq\x1a\x18.codewiki.v1.AnalyzeResp\"?\xbaG\x17\x12\x15按仓库触发分析\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1/api/repos/{id}/analyze\x12\x87\x01\n" +
	"\x0fViewFileContent\x12\x18.codewiki.v1.ViewFileReq\x1a\x19.codewiki.v1.ViewFileResp\"?\xbaG\x15\x12\x13文件/文件内容\x82\xd3\xe4\x93\x02!\x12\x1f/v1/api/{repoId}/file/{id}/view\x12\x91\x01\n" +
	"\fGetImplement\x12\x1c.codewiki.v1.GetImplementReq\x1a\x1d.codewiki.v1.GetImplementResp\"D\xbaG\x1b\x12\x19实体/得到所有实现\x82\xd3\xe4\x93\x02 \x12\x1e/v1/api/entity/{id}/implementsB+\n" +
	"\n" +
	"codewikiV1P\x01Z\x1bcodewiki/api/codewiki/v1;v1b\x06proto3"

var (
	file_codewiki_v1_codewiki_proto_rawDescOnce sync.Once
	file_codewiki_v1_codewiki_proto_rawDescData []byte
)

func file_codewiki_v1_codewiki_proto_rawDescGZIP() []byte {
	file_codewiki_v1_codewiki_proto_rawDescOnce.Do(func() {
		file_codewiki_v1_codewiki_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_codewiki_v1_codewiki_proto_rawDesc), len(file_codewiki_v1_codewiki_proto_rawDesc)))
	})
	return file_codewiki_v1_codewiki_proto_rawDescData
}

var file_codewiki_v1_codewiki_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_codewiki_v1_codewiki_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_codewiki_v1_codewiki_proto_goTypes = []any{
	(RepoType)(0),                   // 0: codewiki.v1.RepoType
	(Language)(0),                   // 1: codewiki.v1.Language
	(FunScope)(0),                   // 2: codewiki.v1.FunScope
	(*AnalyzeReq)(nil),              // 3: codewiki.v1.AnalyzeReq
	(*AnalyzeResp)(nil),             // 4: codewiki.v1.AnalyzeResp
	(*CallChainReq)(nil),            // 5: codewiki.v1.CallChainReq
	(*CallChainResp)(nil),           // 6: codewiki.v1.CallChainResp
	(*CallRelationship)(nil),        // 7: codewiki.v1.CallRelationship
	(*Repo)(nil),                    // 8: codewiki.v1.Repo
	(*CreateRepoReq)(nil),           // 9: codewiki.v1.CreateRepoReq
	(*CreateRepoResp)(nil),          // 10: codewiki.v1.CreateRepoResp
	(*ListRepoReq)(nil),             // 11: codewiki.v1.ListRepoReq
	(*ListRepoResp)(nil),            // 12: codewiki.v1.ListRepoResp
	(*GetRepoReq)(nil),              // 13: codewiki.v1.GetRepoReq
	(*GetRepoResp)(nil),             // 14: codewiki.v1.GetRepoResp
	(*DeleteRepoReq)(nil),           // 15: codewiki.v1.DeleteRepoReq
	(*DeleteRepoResp)(nil),          // 16: codewiki.v1.DeleteRepoResp
	(*AnalyzeRepoReq)(nil),          // 17: codewiki.v1.AnalyzeRepoReq
	(*GetRepoTreeReq)(nil),          // 18: codewiki.v1.GetRepoTreeReq
	(*GetRepoTreeResp)(nil),         // 19: codewiki.v1.GetRepoTreeResp
	(*PackageNode)(nil),             // 20: codewiki.v1.PackageNode
	(*FileNode)(nil),                // 21: codewiki.v1.FileNode
	(*ViewFileReq)(nil),             // 22: codewiki.v1.ViewFileReq
	(*ViewFileResp)(nil),            // 23: codewiki.v1.ViewFileResp
	(*Function)(nil),                // 24: codewiki.v1.Function
	(*Entity)(nil),                  // 25: codewiki.v1.Entity
	(*GetImplementReq)(nil),         // 26: codewiki.v1.GetImplementReq
	(*GetImplementResp)(nil),        // 27: codewiki.v1.GetImplementResp
	(*AnswerReq)(nil),               // 28: codewiki.v1.AnswerReq
	(*AnswerResp)(nil),              // 29: codewiki.v1.AnswerResp
	(*CallChainResp_Result)(nil),    // 30: codewiki.v1.CallChainResp.Result
	(*CreateRepoResp_Result)(nil),   // 31: codewiki.v1.CreateRepoResp.Result
	(*ListRepoResp_Result)(nil),     // 32: codewiki.v1.ListRepoResp.Result
	(*GetRepoResp_Result)(nil),      // 33: codewiki.v1.GetRepoResp.Result
	(*GetRepoTreeResp_Result)(nil),  // 34: codewiki.v1.GetRepoTreeResp.Result
	(*ViewFileResp_Result)(nil),     // 35: codewiki.v1.ViewFileResp.Result
	(*GetImplementResp_Result)(nil), // 36: codewiki.v1.GetImplementResp.Result
	(*BaseResp)(nil),                // 37: codewiki.v1.BaseResp
}
var file_codewiki_v1_codewiki_proto_depIdxs = []int32{
	0,  // 0: codewiki.v1.AnalyzeReq.repoType:type_name -> codewiki.v1.RepoType
	37, // 1: codewiki.v1.AnalyzeResp.ret:type_name -> codewiki.v1.BaseResp
	37, // 2: codewiki.v1.CallChainResp.ret:type_name -> codewiki.v1.BaseResp
	30, // 3: codewiki.v1.CallChainResp.body:type_name -> codewiki.v1.CallChainResp.Result
	0,  // 4: codewiki.v1.Repo.repoType:type_name -> codewiki.v1.RepoType
	1,  // 5: codewiki.v1.Repo.language:type_name -> codewiki.v1.Language
	0,  // 6: codewiki.v1.CreateRepoReq.repoType:type_name -> codewiki.v1.RepoType
	1,  // 7: codewiki.v1.CreateRepoReq.language:type_name -> codewiki.v1.Language
	37, // 8: codewiki.v1.CreateRepoResp.ret:type_name -> codewiki.v1.BaseResp
	31, // 9: codewiki.v1.CreateRepoResp.body:type_name -> codewiki.v1.CreateRepoResp.Result
	37, // 10: codewiki.v1.ListRepoResp.ret:type_name -> codewiki.v1.BaseResp
	32, // 11: codewiki.v1.ListRepoResp.body:type_name -> codewiki.v1.ListRepoResp.Result
	37, // 12: codewiki.v1.GetRepoResp.ret:type_name -> codewiki.v1.BaseResp
	33, // 13: codewiki.v1.GetRepoResp.body:type_name -> codewiki.v1.GetRepoResp.Result
	37, // 14: codewiki.v1.DeleteRepoResp.ret:type_name -> codewiki.v1.BaseResp
	37, // 15: codewiki.v1.GetRepoTreeResp.ret:type_name -> codewiki.v1.BaseResp
	34, // 16: codewiki.v1.GetRepoTreeResp.body:type_name -> codewiki.v1.GetRepoTreeResp.Result
	37, // 17: codewiki.v1.ViewFileResp.ret:type_name -> codewiki.v1.BaseResp
	35, // 18: codewiki.v1.ViewFileResp.body:type_name -> codewiki.v1.ViewFileResp.Result
	24, // 19: codewiki.v1.Entity.functions:type_name -> codewiki.v1.Function
	37, // 20: codewiki.v1.GetImplementResp.ret:type_name -> codewiki.v1.BaseResp
	36, // 21: codewiki.v1.GetImplementResp.body:type_name -> codewiki.v1.GetImplementResp.Result
	7,  // 22: codewiki.v1.CallChainResp.Result.callRelations:type_name -> codewiki.v1.CallRelationship
	8,  // 23: codewiki.v1.ListRepoResp.Result.repo:type_name -> codewiki.v1.Repo
	8,  // 24: codewiki.v1.GetRepoResp.Result.repo:type_name -> codewiki.v1.Repo
	20, // 25: codewiki.v1.GetRepoTreeResp.Result.packages:type_name -> codewiki.v1.PackageNode
	21, // 26: codewiki.v1.GetRepoTreeResp.Result.files:type_name -> codewiki.v1.FileNode
	1,  // 27: codewiki.v1.ViewFileResp.Result.language:type_name -> codewiki.v1.Language
	24, // 28: codewiki.v1.ViewFileResp.Result.functions:type_name -> codewiki.v1.Function
	25, // 29: codewiki.v1.GetImplementResp.Result.entities:type_name -> codewiki.v1.Entity
	9,  // 30: codewiki.v1.RepoService.CreateRepo:input_type -> codewiki.v1.CreateRepoReq
	11, // 31: codewiki.v1.RepoService.ListRepos:input_type -> codewiki.v1.ListRepoReq
	13, // 32: codewiki.v1.RepoService.GetRepo:input_type -> codewiki.v1.GetRepoReq
	15, // 33: codewiki.v1.RepoService.DeleteRepo:input_type -> codewiki.v1.DeleteRepoReq
	18, // 34: codewiki.v1.RepoService.GetRepoTree:input_type -> codewiki.v1.GetRepoTreeReq
	5,  // 35: codewiki.v1.CodeAnalyzerService.CallChain:input_type -> codewiki.v1.CallChainReq
	17, // 36: codewiki.v1.CodeAnalyzerService.AnalyzeRepo:input_type -> codewiki.v1.AnalyzeRepoReq
	22, // 37: codewiki.v1.CodeAnalyzerService.ViewFileContent:input_type -> codewiki.v1.ViewFileReq
	26, // 38: codewiki.v1.CodeAnalyzerService.GetImplement:input_type -> codewiki.v1.GetImplementReq
	10, // 39: codewiki.v1.RepoService.CreateRepo:output_type -> codewiki.v1.CreateRepoResp
	12, // 40: codewiki.v1.RepoService.ListRepos:output_type -> codewiki.v1.ListRepoResp
	14, // 41: codewiki.v1.RepoService.GetRepo:output_type -> codewiki.v1.GetRepoResp
	16, // 42: codewiki.v1.RepoService.DeleteRepo:output_type -> codewiki.v1.DeleteRepoResp
	19, // 43: codewiki.v1.RepoService.GetRepoTree:output_type -> codewiki.v1.GetRepoTreeResp
	6,  // 44: codewiki.v1.CodeAnalyzerService.CallChain:output_type -> codewiki.v1.CallChainResp
	4,  // 45: codewiki.v1.CodeAnalyzerService.AnalyzeRepo:output_type -> codewiki.v1.AnalyzeResp
	23, // 46: codewiki.v1.CodeAnalyzerService.ViewFileContent:output_type -> codewiki.v1.ViewFileResp
	27, // 47: codewiki.v1.CodeAnalyzerService.GetImplement:output_type -> codewiki.v1.GetImplementResp
	39, // [39:48] is the sub-list for method output_type
	30, // [30:39] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_codewiki_v1_codewiki_proto_init() }
func file_codewiki_v1_codewiki_proto_init() {
	if File_codewiki_v1_codewiki_proto != nil {
		return
	}
	file_codewiki_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_codewiki_v1_codewiki_proto_rawDesc), len(file_codewiki_v1_codewiki_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_codewiki_v1_codewiki_proto_goTypes,
		DependencyIndexes: file_codewiki_v1_codewiki_proto_depIdxs,
		EnumInfos:         file_codewiki_v1_codewiki_proto_enumTypes,
		MessageInfos:      file_codewiki_v1_codewiki_proto_msgTypes,
	}.Build()
	File_codewiki_v1_codewiki_proto = out.File
	file_codewiki_v1_codewiki_proto_goTypes = nil
	file_codewiki_v1_codewiki_proto_depIdxs = nil
}
